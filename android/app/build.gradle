def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new Exception("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.huawei.agconnect'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        wishare {
            storeFile file('wishare.keystore')
            keyAlias 'shanshu'
            keyPassword 'hx123456'
            storePassword 'hx123456'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    defaultConfig {
        applicationId "com.wishare.shanshuguanli"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.

        // 直接从flutter>packages>flutter_tools>gradle>flutter更改flutter.minSdkVersion和flutter.targetSdkVersion。
        minSdkVersion 20
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a','arm64-v8a'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "f02a45b9542a99cd79446472", // NOTE: JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }

    buildTypes {

        // debug环境
        debug {
            minifyEnabled false
            signingConfig signingConfigs.wishare
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        // release环境
        release {
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.wishare
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.0'

    // gson
    api 'com.google.code.gson:gson:2.8.1'

    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0@aar'

    // 腾讯X5webview
    api 'com.tencent.tbs:tbssdk:44136'

    // rxpermissions
    api 'io.reactivex.rxjava2:rxjava:2.2.17'
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    api 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    api 'com.github.tbruyelle:rxpermissions:0.10.2@aar'

    implementation 'cn.jiguang.sdk:jpush:5.0.0'

    implementation 'com.huawei.hms:push:6.7.0.300'
    //厂商版本和 JPush SDK 版本保持一致
    implementation 'cn.jiguang.sdk.plugin:huawei:5.0.0'

    // 百度ocr
//    implementation(name: 'ocrsdk', ext: 'aar')
//    api project(':ocr_ui')
}
